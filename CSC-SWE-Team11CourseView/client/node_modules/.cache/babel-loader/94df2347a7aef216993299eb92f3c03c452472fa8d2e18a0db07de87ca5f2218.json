{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\islay\\\\Documents\\\\Local_Repo\\\\CSC4350_SWE\\\\CSC-SWE-Team11CourseView\\\\client\\\\src\\\\admin\\\\adminCourses\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../adminLayout/SideBar';\nimport Navbar from '../adminLayout/NavBar';\nimport \"./adminCourses.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport ClientAPI from \"../../api/clientAPI\";\nimport CourseAPI from '../../api/courseAPI.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminCourses = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const coursesPerPage = 20;\n  const indexOfLastCourses = currentPage * coursesPerPage;\n  const indexOfFirstCourses = indexOfLastCourses - coursesPerPage;\n  const currentCourses = courses.slice(indexOfFirstCourses, indexOfLastCourses);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [terms, setTerms] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [visiblePages, setVisiblePages] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (Cookies.get(\"isAdmin\") !== '1') navigate(\"/\");\n  }, []);\n  useEffect(() => {\n    async function fetchCourses() {\n      try {\n        const data = {\n          limit: coursesPerPage,\n          page: currentPage\n        };\n        const response = await ClientAPI.post(\"getCourses\", data);\n        setCourses(response.data);\n      } catch (error) {\n        console.error(\"Error fetching Courses:\", error);\n      }\n    }\n    fetchCourses();\n  }, [currentPage]);\n  const paginate = pageNumber => {\n    const totalPages = Math.ceil(courses.length / coursesPerPage);\n    if (pageNumber < 1 || pageNumber > totalPages) {\n      return;\n    }\n    setCurrentPage(pageNumber);\n  };\n  const calculateVisiblePages = (currentPage, totalPages) => {\n    const range = 2; // Number of pages to show before and after the current page\n    let start = Math.max(1, currentPage - range);\n    let end = Math.min(totalPages, currentPage + range);\n    if (currentPage - range <= 1) {\n      end = Math.min(totalPages, 1 + 2 * range);\n    }\n    if (currentPage + range >= totalPages) {\n      start = Math.max(1, totalPages - 2 * range);\n    }\n    return Array.from({\n      length: end - start + 1\n    }, (_, i) => start + i);\n  };\n  useEffect(() => {\n    const totalPages = Math.ceil(courses.length / coursesPerPage);\n    setVisiblePages(calculateVisiblePages(currentPage, totalPages));\n  }, [currentPage, courses]);\n  async function fetchCourses() {\n    try {\n      const data = {\n        limit: coursesPerPage,\n        page: currentPage\n      };\n      const response = await ClientAPI.post(\"getCourses\", data);\n      setCourses(response.data);\n    } catch (error) {\n      console.error(\"Error fetching Courses:\", error);\n    }\n  }\n  async function fetchTermsAndDepartments() {\n    try {\n      const data = {\n        limit: coursesPerPage,\n        page: currentPage\n      };\n      const response1 = await ClientAPI.post(\"getTerms\", data);\n      setTerms(response1.data);\n      const response2 = await ClientAPI.post(\"getDepartment\", data);\n      setDepartments(response2.data);\n    } catch (error) {\n      console.error(\"Error fetching Terms and Departments:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchCourses();\n    fetchTermsAndDepartments();\n  }, [currentPage]);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  /*            \r\n  const handleAddCourses = async (event) => {\r\n              event.preventDefault();\r\n              try {\r\n                  const formData = new FormData();\r\n                  \r\n                  const file = event.target.elements.excelFile.files[0]; // Get the uploaded file\r\n                  const terms = event.target.elements.terms.value; // Get the selected term\r\n                  const departments = event.target.elements.departments.value; // Get the selected department\r\n                  \r\n                  formData.append('terms', terms);\r\n                  formData.append('departments', departments);\r\n                  formData.append('excelFile', file);\r\n                  \r\n                  console.log('terms', terms);\r\n                  console.log('departments', departments);\r\n                  console.log('excelFile', file);\r\n                  \r\n                  console.log(\"Data sent to server:\", formData);\r\n                  \r\n                  const response = await ClientAPI.post(\"addCourses\", formData);\r\n                  console.log(\"Response from server:\", response);\r\n                  \r\n                  // If the response is successful, fetch updated courses\r\n                  if (response && response.data) {\r\n                      await fetchCourses();\r\n                  } else {\r\n                      console.error(\"Invalid response from server:\", response);\r\n                  }\r\n              } catch (error) {\r\n                  console.error(\"Error adding Courses:\", error);\r\n                  console.log(\"Error details:\", error.response?.data);\r\n              }\r\n              closeModal();\r\n          }; \r\n          */\n  const handleAddCourses = async event => {\n    event.preventDefault();\n    try {\n      const file = event.target.elements.excelFile.files[0]; // Get the uploaded file\n      console.log(file);\n      if (!file) {\n        alert(\"Please select an Excel file.\");\n        return;\n      }\n      const terms = event.target.elements.terms.value; // Get the selected term\n      const departments = event.target.elements.departments.value; // Get the selected department\n\n      // Create a FormData object\n      const formData = new FormData();\n      formData.append('excelFile', file); // Append the file to FormData\n      formData.append('terms', terms); // Append terms to FormData\n      formData.append('departments', departments); // Append departments to FormData\n\n      console.log(\"Data sent to server:\", formData);\n      const response = await CourseAPI.addCourses(formData);\n      console.log(\"Response from server:\", response);\n\n      // If the response is successful, fetch updated courses\n      if (response && response.data) {\n        await fetchCourses();\n      } else {\n        console.error(\"Invalid response from server:\", response);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error adding Courses:\", error);\n      console.log(\"Error details:\", (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    }\n    closeModal();\n  };\n  const removeCourses = async (event, coursesID) => {\n    event.preventDefault();\n    try {\n      const data = {\n        coursesID: coursesID\n      };\n      await ClientAPI.post(\"deleteCourses\", data);\n      alert(\"Deleted Courses Successfully\");\n      await fetchCourses();\n    } catch (error) {\n      console.error(\"Error deleting Courses:\", error);\n      alert(\"Error deleting Courses: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    const modalForm = document.getElementById(\"addModal\");\n    if (modalForm) {\n      if (isModalOpen) {\n        modalForm.style.display = \"block\";\n      } else {\n        modalForm.style.display = \"none\";\n      }\n    }\n  }, [isModalOpen]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"content\",\n    className: \"adminPage course\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content-main-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adminLeft\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Courses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Courses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bx bx-chevron-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"active\",\n                href: \"#\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"items-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CRN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Prefix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Professor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Departments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentCourses.map(courses => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.crn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.prefix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.professor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.term\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: courses.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"edit\",\n                role: \"button\",\n                href: `adminUpdateCourses/${courses.id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                method: \"post\",\n                action: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"delete\",\n                  onClick: e => removeCourses(e, courses.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)]\n          }, courses.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"add-btn\",\n        onClick: openModal,\n        children: \"Add New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addModal\",\n        className: \"modal-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"popup-form\",\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'center',\n              color: 'var(--blue)'\n            },\n            children: \"Add Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddCourses,\n            encType: \"multipart/form-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"terms\",\n              children: \"Select Terms:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"terms\",\n              name: \"terms\",\n              children: terms.map(term => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.id,\n                children: term.name\n              }, term.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"departments\",\n              children: \"Select Departments:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"departments\",\n              name: \"departments\",\n              children: departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: department.id,\n                children: department.name\n              }, department.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file\",\n              children: \"Upload Excel File: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"file\",\n              name: \"excelFile\",\n              accept: \".xlsx, .xls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 102\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 108\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"close-btn\",\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              name: \"addProduct\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-number-admin\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"aria-label\": \"Page navigation example\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${currentPage <= 1 ? 'disabled' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: `#${currentPage - 1}`,\n                onClick: () => paginate(currentPage - 1),\n                \"aria-label\": \"Previous\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xAB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), visiblePages.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"page-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => paginate(number),\n                href: `#${number}`,\n                className: `page-link ${currentPage === number ? 'active' : ''}`,\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this)\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item ${currentPage >= Math.ceil(courses.length / coursesPerPage) ? 'disabled' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"page-link\",\n                href: `#${currentPage + 1}`,\n                onClick: () => paginate(currentPage + 1),\n                \"aria-label\": \"Next\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \"\\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminCourses, \"L2eG8GE0RAd77EiKdH8nvPw7XnI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminCourses;\nvar _c;\n$RefreshReg$(_c, \"AdminCourses\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Navbar","useNavigate","Cookies","ClientAPI","CourseAPI","jsxDEV","_jsxDEV","AdminCourses","_s","courses","setCourses","currentPage","setCurrentPage","coursesPerPage","indexOfLastCourses","indexOfFirstCourses","currentCourses","slice","isModalOpen","setIsModalOpen","terms","setTerms","departments","setDepartments","visiblePages","setVisiblePages","navigate","get","fetchCourses","data","limit","page","response","post","error","console","paginate","pageNumber","totalPages","Math","ceil","length","calculateVisiblePages","range","start","max","end","min","Array","from","_","i","fetchTermsAndDepartments","response1","response2","openModal","closeModal","handleAddCourses","event","preventDefault","file","target","elements","excelFile","files","log","alert","value","formData","FormData","append","addCourses","_error$response","removeCourses","coursesID","message","modalForm","document","getElementById","style","display","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","href","map","crn","prefix","number","professor","term","department","role","method","action","onClick","e","textAlign","color","onSubmit","encType","htmlFor","name","type","accept","_c","$RefreshReg$"],"sources":["C:/Users/islay/Documents/Local_Repo/CSC4350_SWE/CSC-SWE-Team11CourseView/client/src/admin/adminCourses/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../adminLayout/SideBar';\r\nimport Navbar from '../adminLayout/NavBar';\r\nimport \"./adminCourses.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\nimport ClientAPI from \"../../api/clientAPI\";\r\nimport CourseAPI from '../../api/courseAPI.js';\r\n\r\nexport const AdminCourses = () => {\r\n    const [courses, setCourses] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const coursesPerPage = 20;\r\n    const indexOfLastCourses = currentPage * coursesPerPage;\r\n    const indexOfFirstCourses = indexOfLastCourses - coursesPerPage;\r\n    const currentCourses = courses.slice(indexOfFirstCourses, indexOfLastCourses);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [terms, setTerms] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [visiblePages, setVisiblePages] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (Cookies.get(\"isAdmin\") !== '1')\r\n            navigate(\"/\");\r\n    }, []);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        async function fetchCourses() {\r\n            try {\r\n                const data = { limit: coursesPerPage, page: currentPage };\r\n                const response = await ClientAPI.post(\"getCourses\", data);\r\n                setCourses(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching Courses:\", error);\r\n            }\r\n        }\r\n\r\n        fetchCourses();\r\n    }, [currentPage]);\r\n\r\n    const paginate = pageNumber => {\r\n        const totalPages = Math.ceil(courses.length / coursesPerPage);\r\n        if (pageNumber < 1 || pageNumber > totalPages) {\r\n            return;\r\n        }\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const calculateVisiblePages = (currentPage, totalPages) => {\r\n        const range = 2; // Number of pages to show before and after the current page\r\n        let start = Math.max(1, currentPage - range);\r\n        let end = Math.min(totalPages, currentPage + range);\r\n\r\n        if (currentPage - range <= 1) {\r\n            end = Math.min(totalPages, 1 + 2 * range);\r\n        }\r\n        if (currentPage + range >= totalPages) {\r\n            start = Math.max(1, totalPages - 2 * range);\r\n        }\r\n\r\n        return Array.from({ length: end - start + 1 }, (_, i) => start + i);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const totalPages = Math.ceil(courses.length / coursesPerPage);\r\n        setVisiblePages(calculateVisiblePages(currentPage, totalPages));\r\n    }, [currentPage, courses]);\r\n\r\n    async function fetchCourses() {\r\n        try {\r\n            const data = { limit: coursesPerPage, page: currentPage };\r\n            const response = await ClientAPI.post(\"getCourses\", data);\r\n            setCourses(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching Courses:\", error);\r\n        }\r\n    }\r\n\r\n    async function fetchTermsAndDepartments() {\r\n        try {\r\n            const data = { limit: coursesPerPage, page: currentPage };\r\n\r\n            const response1 = await ClientAPI.post(\"getTerms\", data);\r\n            setTerms(response1.data);\r\n\r\n            const response2 = await ClientAPI.post(\"getDepartment\", data);\r\n            setDepartments(response2.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching Terms and Departments:\", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCourses();\r\n        fetchTermsAndDepartments();\r\n    }, [currentPage]);\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    /*            \r\n    const handleAddCourses = async (event) => {\r\n                event.preventDefault();\r\n                try {\r\n                    const formData = new FormData();\r\n                    \r\n                    const file = event.target.elements.excelFile.files[0]; // Get the uploaded file\r\n                    const terms = event.target.elements.terms.value; // Get the selected term\r\n                    const departments = event.target.elements.departments.value; // Get the selected department\r\n                    \r\n                    formData.append('terms', terms);\r\n                    formData.append('departments', departments);\r\n                    formData.append('excelFile', file);\r\n                    \r\n                    console.log('terms', terms);\r\n                    console.log('departments', departments);\r\n                    console.log('excelFile', file);\r\n                    \r\n                    console.log(\"Data sent to server:\", formData);\r\n                    \r\n                    const response = await ClientAPI.post(\"addCourses\", formData);\r\n                    console.log(\"Response from server:\", response);\r\n                    \r\n                    // If the response is successful, fetch updated courses\r\n                    if (response && response.data) {\r\n                        await fetchCourses();\r\n                    } else {\r\n                        console.error(\"Invalid response from server:\", response);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error adding Courses:\", error);\r\n                    console.log(\"Error details:\", error.response?.data);\r\n                }\r\n                closeModal();\r\n            }; \r\n            */\r\n    const handleAddCourses = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const file = event.target.elements.excelFile.files[0]; // Get the uploaded file\r\n            console.log(file);\r\n            if (!file) {\r\n                alert(\"Please select an Excel file.\");\r\n                return;\r\n            }\r\n            const terms = event.target.elements.terms.value; // Get the selected term\r\n            const departments = event.target.elements.departments.value; // Get the selected department\r\n\r\n            // Create a FormData object\r\n            const formData = new FormData();\r\n            formData.append('excelFile', file); // Append the file to FormData\r\n            formData.append('terms', terms); // Append terms to FormData\r\n            formData.append('departments', departments); // Append departments to FormData\r\n\r\n            console.log(\"Data sent to server:\", formData);\r\n\r\n            const response = await CourseAPI.addCourses(formData);\r\n            console.log(\"Response from server:\", response);\r\n\r\n            // If the response is successful, fetch updated courses\r\n            if (response && response.data) {\r\n                await fetchCourses();\r\n            } else {\r\n                console.error(\"Invalid response from server:\", response);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error adding Courses:\", error);\r\n            console.log(\"Error details:\", error.response?.data);\r\n        }\r\n        closeModal();\r\n    };\r\n\r\n\r\n    const removeCourses = async (event, coursesID) => {\r\n        event.preventDefault();\r\n        try {\r\n            const data = {\r\n                coursesID: coursesID,\r\n            }\r\n            await ClientAPI.post(\"deleteCourses\", data);\r\n            alert(\"Deleted Courses Successfully\");\r\n            await fetchCourses();\r\n        } catch (error) {\r\n            console.error(\"Error deleting Courses:\", error);\r\n            alert(\"Error deleting Courses: \" + error.message);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const modalForm = document.getElementById(\"addModal\");\r\n\r\n        if (modalForm) {\r\n            if (isModalOpen) {\r\n                modalForm.style.display = \"block\";\r\n            } else {\r\n                modalForm.style.display = \"none\";\r\n            }\r\n        }\r\n    }, [isModalOpen]);\r\n\r\n    return (\r\n        <section id=\"content\" className='adminPage course'>\r\n            <Sidebar />\r\n            <Navbar />\r\n            <main className=\"content-main-product\">\r\n                <div className=\"head-title\">\r\n                    <div className=\"adminLeft\">\r\n                        <h1>Courses</h1>\r\n                        <ul class=\"breadcrumb\">\r\n                            <li>\r\n                                <a href=\"#\">Courses</a>\r\n                            </li>\r\n                            <li><i class='bx bx-chevron-right' ></i></li>\r\n                            <li>\r\n                                <a class=\"active\" href=\"#\">Home</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <table id=\"items-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>CRN</th>\r\n                            <th>Course Prefix</th>\r\n                            <th>Course Number</th>\r\n                            <th>Professor</th>\r\n                            <th>Terms</th>\r\n                            <th>Departments</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {currentCourses.map((courses) => (\r\n                            <tr key={courses.id}>\r\n                                <td>{courses.id}</td>\r\n                                <td>{courses.crn}</td>\r\n                                <td>{courses.prefix}</td>\r\n                                <td>{courses.number}</td>\r\n                                <td>{courses.professor}</td>\r\n                                <td>{courses.term}</td>\r\n                                <td>{courses.department}</td>\r\n                                <td>\r\n                                    <a class=\"edit\" role=\"button\" href={`adminUpdateCourses/${courses.id}`}>\r\n                                        Edit\r\n                                    </a>\r\n                                    <form method=\"post\" action=\"\">\r\n                                        <button class=\"delete\" onClick={(e) => removeCourses(e, courses.id)}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </form>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <button id=\"add-btn\" onClick={openModal}>\r\n                    Add New\r\n                </button>\r\n\r\n                {isModalOpen && (\r\n                    <div id=\"addModal\" className=\"modal-form\">\r\n                        <div id=\"popup-form\" className=\"popup\">\r\n                            <h2 style={{ textAlign: 'center', color: 'var(--blue)' }}>Add Data</h2>\r\n                            <br />\r\n                            <form onSubmit={handleAddCourses} encType=\"multipart/form-data\">\r\n                                <label htmlFor=\"terms\">Select Terms:</label>\r\n                                <select id=\"terms\" name=\"terms\">\r\n                                    {terms.map((term) => (\r\n                                        <option key={term.id} value={term.id}>{term.name}</option>\r\n                                    ))}\r\n                                </select><br />\r\n                                <label htmlFor=\"departments\">Select Departments:</label>\r\n                                <select id=\"departments\" name=\"departments\">\r\n                                    {departments.map((department) => (\r\n                                        <option key={department.id} value={department.id}>{department.name}</option>\r\n                                    ))}\r\n                                </select><br />\r\n\r\n\r\n                                <label htmlFor=\"file\">Upload Excel File: </label><br />\r\n                                <input type=\"file\" id=\"file\" name=\"excelFile\" accept=\".xlsx, .xls\" /><br /><br />\r\n\r\n                                <button id=\"close-btn\" type=\"button\" onClick={closeModal}>\r\n                                    Close\r\n                                </button>\r\n                                <button type=\"submit\" name=\"addProduct\">\r\n                                    Submit\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <br /><br />\r\n                <div className='page-number-admin'>\r\n                    <div aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination\">\r\n                            <li className={`page-item ${currentPage <= 1 ? 'disabled' : ''}`}>\r\n                                <a className=\"page-link\" href={`#${currentPage - 1}`} onClick={() => paginate(currentPage - 1)} aria-label=\"Previous\">\r\n                                    <span aria-hidden=\"true\">«</span>\r\n                                </a>\r\n                            </li>\r\n                            {visiblePages.map((number) => (\r\n                                <li key={number} className=\"page-item\">\r\n                                    <a onClick={() => paginate(number)} href={`#${number}`} className={`page-link ${currentPage === number ? 'active' : ''}`}>\r\n                                        {number}\r\n                                    </a>\r\n                                </li>\r\n                            ))}\r\n                            <li className={`page-item ${currentPage >= Math.ceil(courses.length / coursesPerPage) ? 'disabled' : ''}`}>\r\n                                <a className=\"page-link\" href={`#${currentPage + 1}`} onClick={() => paginate(currentPage + 1)} aria-label=\"Next\">\r\n                                    <span aria-hidden=\"true\">»</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </section>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}